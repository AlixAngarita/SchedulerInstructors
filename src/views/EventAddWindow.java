/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.Events;
import controllers.Instructors;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import models.Event;
import models.Instructor;

/**
 *
 * @author andre
 */
public class EventAddWindow extends javax.swing.JFrame {

    /**
     * Creates new form EventAddWindow
     */
    int instructorIndex = 0;
    boolean newEvent;
    Instructor instructor;
    Instructors instructors = new Instructors();
    List<Event> allEventsInstructor;
    List<Instructor> allInstructors;
    Event selectedEventUpdate = null;
    Scheduler parent;
    
    public EventAddWindow() {
        initComponents();
    }
    //create event
    public EventAddWindow(int instructorIndex, Scheduler parent) {
        initComponents();
        this.newEvent = true;
        this.setTitle("New Event");
        jComboInstructor.setEnabled(false);
        fillComboInstructor(instructorIndex);
        this.parent = parent;
        jButtonCreateEvent.setEnabled(false);
    }
    //update event
    public EventAddWindow(int instructorIndex, Event event, Scheduler parent) {
        initComponents();
        this.newEvent = false;
        this.setTitle("Update Event");
        jComboInstructor.setEnabled(true);
        fillComboInstructor(instructorIndex);
        this.selectedEventUpdate = event;
        spinnerStartDate.setValue(event.getStart());
        spinnerEndDate.setValue(event.getEnd());
        jtextType.setText(event.getType());
        jTextDescription.setText(event.getDescription());
        this.parent = parent;
    }
    
    private void fillComboInstructor(int instructorIndex)
    {
        this.instructorIndex = instructorIndex;
        allInstructors = instructors.findAllInstructors();
         
        for (Instructor i: allInstructors ) {
             jComboInstructor.addItem(i.getName());
        }
        jComboInstructor.setSelectedIndex(instructorIndex-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spinnerStartDate = new javax.swing.JSpinner();
        spinnerEndDate = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jtextType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextDescription = new javax.swing.JTextArea();
        jButtonCreateEvent = new javax.swing.JButton();
        jButtonCancelCreatingEvent = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboInstructor = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spinnerStartDate.setModel(new javax.swing.SpinnerDateModel());

        spinnerEndDate.setModel(new javax.swing.SpinnerDateModel());

        jLabel2.setText("Type *");
        
        jtextType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtextTypeKeyTyped(evt);
            }
        });

        jLabel3.setText("Description");

        jTextDescription.setColumns(20);
        jTextDescription.setRows(5);
        jScrollPane1.setViewportView(jTextDescription);

        jButtonCreateEvent.setText("OK");
        jButtonCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateEventActionPerformed(evt);
            }
        });

        jButtonCancelCreatingEvent.setText("Close");
        jButtonCancelCreatingEvent.setToolTipText("");
        jButtonCancelCreatingEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelCreatingEventActionPerformed(evt);
            }
        });

        jLabel4.setText("Start Date *");

        jLabel5.setText("End Date *");

        jLabel6.setText("Instructor *");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonCreateEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelCreatingEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spinnerStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(35, 35, 35)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinnerEndDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtextType, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(jComboInstructor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtextType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelCreatingEvent)
                    .addComponent(jButtonCreateEvent))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelCreatingEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelCreatingEventActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelCreatingEventActionPerformed

    private void jButtonCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateEventActionPerformed
        
        if(this.newEvent) {
            //add event
            Events events = new Events();
            Event result = events.createEvent((Date) spinnerStartDate.getValue(), (Date) spinnerEndDate.getValue(), jtextType.getText(), jTextDescription.getText(), this.instructorIndex);
            if(result != null) {
                if(result.isOverlap())
                    JOptionPane.showMessageDialog(this, "Event added.\nThe event conflicts with another one.");
                else
                    JOptionPane.showMessageDialog(this, "Event added for the selected instructor");
                parent.updateTable();
                this.dispose();
            }
            else {
                JOptionPane.showMessageDialog(this, "Please check if:\n- Dates are consistent.");
            } 
        }
        else {
           //update event
            Events events = new Events();
            boolean result = events.updateEvent(selectedEventUpdate.getId(), (Date) spinnerStartDate.getValue(), (Date) spinnerEndDate.getValue(), jtextType.getText(), jTextDescription.getText(), jComboInstructor.getSelectedIndex()+1);
            if(result) {
                JOptionPane.showMessageDialog(this, "Event updated successfully");
                parent.updateTable();
                this.dispose();
            }
            else {
                JOptionPane.showMessageDialog(this, "Please check if:\n- Dates are consistent.\n- Event doesn't conflict.");
            }  
        }
          
    }//GEN-LAST:event_jButtonCreateEventActionPerformed
    
    private void jtextTypeKeyTyped(java.awt.event.KeyEvent evt) {                                   
        jButtonCreateEvent.setEnabled(jtextType.getText().length() != 0);
    }        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventAddWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelCreatingEvent;
    private javax.swing.JButton jButtonCreateEvent;
    private javax.swing.JComboBox<String> jComboInstructor;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextDescription;
    private javax.swing.JTextField jtextType;
    private javax.swing.JSpinner spinnerEndDate;
    private javax.swing.JSpinner spinnerStartDate;
    // End of variables declaration//GEN-END:variables
}
